syntax = "proto3";

package appcomm;

option go_package = "github.com/armadanet/appManager/appcomm";

service ApplicationManager {
    rpc SubmitApplication (Application) returns (stream AppStatus);
    rpc QueryTaskList (Query) returns (TaskList);
}

message Application {
  UUID appId = 1;
  int32 numOfDuplication = 2;
  TaskRequest taskRequest = 3;
}
message UUID {
    string value = 1;
}
message TaskRequest {
    UUID app_id = 1;
    string image = 2;
    repeated string command = 3;
    bool tty = 4;
    string name = 5;
    repeated string env = 6;
    int64 port = 7;
    TaskLimits limits = 8;
    TaskSpec taskspec = 9;
    UUID task_id = 10;
}
message TaskLimits {
    int64 cpu_shares = 1;
    int64 memory = 2;
}
message TaskSpec {
    repeated string Filters = 1;
    string  Sort = 2;
    map<string, ResourceRequirement> ResourceMap = 3;
    map<string, string> Ports = 4;
    bool IsPublic = 5;
    int64 NumReplicas = 6;
    CargoReq CargoSpec = 7;
    Location DataSources = 8;
    repeated string Tags = 9;
}
message ResourceRequirement {
    int64 Requested = 1;
    double Weight = 2;
    bool Required = 3;
}
message CargoReq {
    int64 Size = 1;
    int64 nReplica = 2;
    repeated string IPs = 3;
    repeated string Ports = 4;
}
message Location {
    double lat = 1;
    double lon = 2;
}

message AppStatus {
  string result = 1;
}

message Query {
  UUID clientId = 1;
  Location geoLocation = 2;
  repeated string tag = 3;
  UUID appId = 4;
}

message TaskList {
  repeated Task taskList = 1;
}

message Task {
    string ip = 1;
    string port = 2;
}