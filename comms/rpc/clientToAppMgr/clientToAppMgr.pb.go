// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: clientToAppMgr.proto

package clientToAppMgr

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UUID) Reset() {
	*x = UUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientToAppMgr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UUID) ProtoMessage() {}

func (x *UUID) ProtoReflect() protoreflect.Message {
	mi := &file_clientToAppMgr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UUID.ProtoReflect.Descriptor instead.
func (*UUID) Descriptor() ([]byte, []int) {
	return file_clientToAppMgr_proto_rawDescGZIP(), []int{0}
}

func (x *UUID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon float64 `protobuf:"fixed64,2,opt,name=lon,proto3" json:"lon,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientToAppMgr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_clientToAppMgr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_clientToAppMgr_proto_rawDescGZIP(), []int{1}
}

func (x *Location) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *Location) GetLon() float64 {
	if x != nil {
		return x.Lon
	}
	return 0
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId    *UUID     `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	GeoLocation *Location `protobuf:"bytes,2,opt,name=geoLocation,proto3" json:"geoLocation,omitempty"`
	AppId       *UUID     `protobuf:"bytes,3,opt,name=appId,proto3" json:"appId,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientToAppMgr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_clientToAppMgr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_clientToAppMgr_proto_rawDescGZIP(), []int{2}
}

func (x *Query) GetClientId() *UUID {
	if x != nil {
		return x.ClientId
	}
	return nil
}

func (x *Query) GetGeoLocation() *Location {
	if x != nil {
		return x.GeoLocation
	}
	return nil
}

func (x *Query) GetAppId() *UUID {
	if x != nil {
		return x.AppId
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip   string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientToAppMgr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_clientToAppMgr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_clientToAppMgr_proto_rawDescGZIP(), []int{3}
}

func (x *Task) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Task) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type TaskList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskList []*Task `protobuf:"bytes,1,rep,name=taskList,proto3" json:"taskList,omitempty"`
}

func (x *TaskList) Reset() {
	*x = TaskList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clientToAppMgr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskList) ProtoMessage() {}

func (x *TaskList) ProtoReflect() protoreflect.Message {
	mi := &file_clientToAppMgr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskList.ProtoReflect.Descriptor instead.
func (*TaskList) Descriptor() ([]byte, []int) {
	return file_clientToAppMgr_proto_rawDescGZIP(), []int{4}
}

func (x *TaskList) GetTaskList() []*Task {
	if x != nil {
		return x.TaskList
	}
	return nil
}

var File_clientToAppMgr_proto protoreflect.FileDescriptor

var file_clientToAppMgr_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x4d, 0x67, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x41, 0x70, 0x70, 0x4d, 0x67, 0x72, 0x22, 0x1c, 0x0a, 0x04, 0x55, 0x55, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c,
	0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6c, 0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x30,
	0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x4d, 0x67,
	0x72, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x0b, 0x67, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x41, 0x70, 0x70, 0x4d, 0x67, 0x72, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x67, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x4d, 0x67, 0x72, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x3c, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x70, 0x70,
	0x4d, 0x67, 0x72, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x32, 0x55, 0x0a, 0x11, 0x72, 0x70, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x41, 0x70, 0x70, 0x4d, 0x67, 0x72, 0x12, 0x40, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x4d, 0x67, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a,
	0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x4d, 0x67, 0x72,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x69, 0x6b, 0x68, 0x73, 0x32, 0x34, 0x37,
	0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x4d, 0x67, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_clientToAppMgr_proto_rawDescOnce sync.Once
	file_clientToAppMgr_proto_rawDescData = file_clientToAppMgr_proto_rawDesc
)

func file_clientToAppMgr_proto_rawDescGZIP() []byte {
	file_clientToAppMgr_proto_rawDescOnce.Do(func() {
		file_clientToAppMgr_proto_rawDescData = protoimpl.X.CompressGZIP(file_clientToAppMgr_proto_rawDescData)
	})
	return file_clientToAppMgr_proto_rawDescData
}

var file_clientToAppMgr_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_clientToAppMgr_proto_goTypes = []interface{}{
	(*UUID)(nil),     // 0: clientToAppMgr.UUID
	(*Location)(nil), // 1: clientToAppMgr.Location
	(*Query)(nil),    // 2: clientToAppMgr.Query
	(*Task)(nil),     // 3: clientToAppMgr.Task
	(*TaskList)(nil), // 4: clientToAppMgr.TaskList
}
var file_clientToAppMgr_proto_depIdxs = []int32{
	0, // 0: clientToAppMgr.Query.clientId:type_name -> clientToAppMgr.UUID
	1, // 1: clientToAppMgr.Query.geoLocation:type_name -> clientToAppMgr.Location
	0, // 2: clientToAppMgr.Query.appId:type_name -> clientToAppMgr.UUID
	3, // 3: clientToAppMgr.TaskList.taskList:type_name -> clientToAppMgr.Task
	2, // 4: clientToAppMgr.rpcClientToAppMgr.QueryTaskList:input_type -> clientToAppMgr.Query
	4, // 5: clientToAppMgr.rpcClientToAppMgr.QueryTaskList:output_type -> clientToAppMgr.TaskList
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_clientToAppMgr_proto_init() }
func file_clientToAppMgr_proto_init() {
	if File_clientToAppMgr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_clientToAppMgr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientToAppMgr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientToAppMgr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientToAppMgr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clientToAppMgr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clientToAppMgr_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_clientToAppMgr_proto_goTypes,
		DependencyIndexes: file_clientToAppMgr_proto_depIdxs,
		MessageInfos:      file_clientToAppMgr_proto_msgTypes,
	}.Build()
	File_clientToAppMgr_proto = out.File
	file_clientToAppMgr_proto_rawDesc = nil
	file_clientToAppMgr_proto_goTypes = nil
	file_clientToAppMgr_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RpcClientToAppMgrClient is the client API for RpcClientToAppMgr service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RpcClientToAppMgrClient interface {
	QueryTaskList(ctx context.Context, in *Query, opts ...grpc.CallOption) (*TaskList, error)
}

type rpcClientToAppMgrClient struct {
	cc grpc.ClientConnInterface
}

func NewRpcClientToAppMgrClient(cc grpc.ClientConnInterface) RpcClientToAppMgrClient {
	return &rpcClientToAppMgrClient{cc}
}

func (c *rpcClientToAppMgrClient) QueryTaskList(ctx context.Context, in *Query, opts ...grpc.CallOption) (*TaskList, error) {
	out := new(TaskList)
	err := c.cc.Invoke(ctx, "/clientToAppMgr.rpcClientToAppMgr/QueryTaskList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RpcClientToAppMgrServer is the server API for RpcClientToAppMgr service.
type RpcClientToAppMgrServer interface {
	QueryTaskList(context.Context, *Query) (*TaskList, error)
}

// UnimplementedRpcClientToAppMgrServer can be embedded to have forward compatible implementations.
type UnimplementedRpcClientToAppMgrServer struct {
}

func (*UnimplementedRpcClientToAppMgrServer) QueryTaskList(context.Context, *Query) (*TaskList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTaskList not implemented")
}

func RegisterRpcClientToAppMgrServer(s *grpc.Server, srv RpcClientToAppMgrServer) {
	s.RegisterService(&_RpcClientToAppMgr_serviceDesc, srv)
}

func _RpcClientToAppMgr_QueryTaskList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RpcClientToAppMgrServer).QueryTaskList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clientToAppMgr.rpcClientToAppMgr/QueryTaskList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RpcClientToAppMgrServer).QueryTaskList(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

var _RpcClientToAppMgr_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clientToAppMgr.rpcClientToAppMgr",
	HandlerType: (*RpcClientToAppMgrServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryTaskList",
			Handler:    _RpcClientToAppMgr_QueryTaskList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "clientToAppMgr.proto",
}
